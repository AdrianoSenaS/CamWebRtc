// <auto-generated />
using CamWebRtc.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CamWebRtc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250124203112_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("CamWebRtc.API.Models.CamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConnectionID")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cams", (string)null);
                });

            modelBuilder.Entity("CamWebRtc.API.Models.IceServersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("credential")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IceServers");
                });

            modelBuilder.Entity("CamWebRtc.API.Models.StreamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("urlStream")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stream", (string)null);
                });

            modelBuilder.Entity("CamWebRtc.API.Models.StunServersUrls", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IceServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Urls")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("IceServerId");

                    b.ToTable("StunServers");
                });

            modelBuilder.Entity("CamWebRtc.API.Models.TurnServersUrls", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IceServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Urls")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("IceServerId");

                    b.ToTable("TurnServers");
                });

            modelBuilder.Entity("CamWebRtc.API.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CamWebRtc.API.Models.StunServersUrls", b =>
                {
                    b.HasOne("CamWebRtc.API.Models.IceServersModel", null)
                        .WithMany("UrlsStun")
                        .HasForeignKey("IceServerId");
                });

            modelBuilder.Entity("CamWebRtc.API.Models.TurnServersUrls", b =>
                {
                    b.HasOne("CamWebRtc.API.Models.IceServersModel", null)
                        .WithMany("urlsTurn")
                        .HasForeignKey("IceServerId");
                });

            modelBuilder.Entity("CamWebRtc.API.Models.IceServersModel", b =>
                {
                    b.Navigation("UrlsStun");

                    b.Navigation("urlsTurn");
                });
#pragma warning restore 612, 618
        }
    }
}
